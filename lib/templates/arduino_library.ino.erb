
#include <Adafruit_NeoPixel.h>

#define INTEGER_SCALE 8192

long long_div(long numerator, long denominator)
{
  return (numerator * INTEGER_SCALE) / denominator;
}

long long_mult(long op1, long op2)
{
  return op1 * op2 / INTEGER_SCALE;
}

byte byte_mult(byte op1, byte op2)
{
  return (byte)((uint16_t)op1 * (uint16_t)op2 / (uint16_t)INTEGER_SCALE);
}

int neoPixelPin = <%= pin %>;

// How many NeoPixels we will be using, charge accordingly
int pixelCount = <%= pixels %>;

// Instatiate the NeoPixel from the ibrary
Adafruit_NeoPixel strip = Adafruit_NeoPixel(pixelCount, neoPixelPin, NEO_GRB + NEO_KHZ800);

void setup() {
  strip.begin();
}

void loop() {
  calculate_strip();
  delay(10);
  //Serial.println('b');
  //strip.setPixelColor(1, strip.Color(233,0,0));
  //strip.show();
}

void calculate_strip() {
  long mils = millis();
  for (int i=0; i < pixelCount; i++) {
    long this_phase = long_div(i, pixelCount - 1);
// beginning of generated code

<%= body %>

// end of generated code
  }
  strip.show();
}

<%= code %>

void maxfunction(long op1[3], long op2[3], long out[3]) {
  out[0] = max(op1[0], op2[0]);
  out[1] = max(op1[1], op2[1]);
  out[2] = max(op1[2], op2[2]);
}

